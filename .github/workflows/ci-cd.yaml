name: CI/CD Pipeline
#update token policy
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # login:
  #   runs-on: ubuntu-latest
  #   steps:
  #     -
  #       name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ vars.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  build:
    runs-on: ubuntu-latest
    # needs: login
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build Go API
        run: go build -v
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker image
        run: |
          docker build -t soubarniya/go-api:latest .
          docker push soubarniya/go-api:latest
  codeql:
  runs-on: ubuntu-latest
  steps:
    - name: CodeQL Scan Action
    # You may pin to the exact commit or the version.
    # uses: tonys-code-base/run-codeql-analysis-action@775b3f1cc0b55a35e53f2b0f32363c4c7e3984f7
      uses: tonys-code-base/run-codeql-analysis-action@v0.1.0
      with:
      # Git ref to be analyzed
      git_ref: # optional, default is ${{ github.ref }}
      # Commit SHA
      commit_sha: # optional, default is ${{ github.sha }}
      # The source language(s) to carry out the scan against. Example, - to scan for a single language (such as python): "python". - to scan multiple languages (such as python and javascript): "python,javascript" 
      language_to_scan: Go
      # GitHub token
      token: ${{ secrets.GITHUB_TOKEN }}
      # Query suite to use for the analysis https://docs.github.com/en/code-security/codeql-cli/codeql-cli-manual/database-analyze#querysuitepack 
      codeql_scan_type: # optional, default is code-scanning
      # Build mode to use for creating the CodeQL DB. Used for compiled languages https://docs.github.com/en/code-security/codeql-cli/codeql-cli-manual/database-create#--build-modemode 
      build_mode: # optional, default is 
      # Used for compiled languages. Build command or script that invokes the build process for the codebase https://docs.github.com/en/code-security/codeql-cli/codeql-cli-manual/database-create#-c---commandcommand 
      build_command: # optional, default is 
      # Path to CodeQL code scanning configuration file https://docs.github.com/en/code-security/codeql-cli/codeql-cli-manual/database-create#--codescanning-configfile 
      codeql_config_file: # optional, default is 
            
  # scan_code:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       # Disabling shallow clone is recommended for improving relevancy of reporting
  #       fetch-depth: 0
  #   - name: SonarCloud Scan
  #     uses: sonarsource/sonarcloud-github-action@v3.1.0 # Ex: v2.1.0, See the latest version at https://github.com/marketplace/actions/sonarcloud-scan
  #     env:
  #       SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}

  # scan_code:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: '1.20'

  #     - name: Install int
  #       run: |
  #         curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.50.1
  #         golangci-lint --version

  #     - name: Run code scanning with golangci-lint
  #       run: |
  #         golangci-lint run ./...

  scan_image:
    runs-on: ubuntu-latest
    needs: scan_code
    steps:
      - name: Cache Trivy DB
        uses: actions/cache@v2
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy-db

      - name: Install Trivy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.45.1/trivy_0.45.1_Linux-64bit.deb
          sudo dpkg -i trivy_0.45.1_Linux-64bit.deb

      - name: Scan Docker image with Trivy
        run: |
          trivy image soubarniya/go-api:latest

  deploy:
    runs-on: ubuntu-latest
    needs: scan_image
    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'
      - name: Set up kubeconfig for Minikube
        run: |
          mkdir -p ~/.kube
          echo "$MINIKUBE_KUBECONFIG" > ~/.kube/config
        env:
          MINIKUBE_KUBECONFIG: ${{ secrets.MINIKUBE_KUBECONFIG }}
      - name: Deploy to Minikube
        run: |
          kubectl apply -f k8s-deployment.yaml
#comment1111