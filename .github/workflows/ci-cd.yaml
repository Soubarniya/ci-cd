name: CI/CD Pipeline
#update token policy
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # login:
  #   runs-on: ubuntu-latest
  #   steps:
  #     -
  #       name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ vars.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  build:
    runs-on: ubuntu-latest
    # needs: login
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build Go API
        run: go build -v
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker image
        run: |
          docker build -t soubarniya/go-api:latest .
          docker push soubarniya/go-api:latest
  scan_code:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@v3.1.0 # Ex: v2.1.0, See the latest version at https://github.com/marketplace/actions/sonarcloud-scan
      env:
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}

  # scan_code:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: '1.20'

  #     - name: Install int
  #       run: |
  #         curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.50.1
  #         golangci-lint --version

  #     - name: Run code scanning with golangci-lint
  #       run: |
  #         golangci-lint run ./...

  scan_image:
    runs-on: ubuntu-latest
    needs: scan_code
    steps:
      - name: Install Trivy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.45.1/trivy_0.45.1_Linux-64bit.deb
          sudo dpkg -i trivy_0.45.1_Linux-64bit.deb

      - name: Scan Docker image with Trivy
        run: |
          trivy image soubarniya/go-api:latest

  deploy:
    runs-on: ubuntu-latest
    needs: scan_image
    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'
      - name: Set up kubeconfig for Minikube
        run: |
          mkdir -p ~/.kube
          echo "$MINIKUBE_KUBECONFIG" > ~/.kube/config
        env:
          MINIKUBE_KUBECONFIG: ${{ secrets.MINIKUBE_KUBECONFIG }}
      - name: Deploy to Minikube
        run: |
          kubectl apply -f k8s-deployment.yaml
#comment